Flaches Profil:

Jedes Muster zählt als 0.01 seconds.
  %    kumulativ   Selbst            Selbst   Gesamt          
 Zeit   seconds   seconds  Aufrufe  s/Aufru  s/Aufru  Name    
 27.30     17.60    17.60        1    17.60    39.42  determinisation_new_main_graph(_IO_FILE*, etat_comp**)
 21.76     31.63    14.03 313603945     0.00     0.00  ajouter_etat_dans_ensemble_det(int, char_etats_det**)
 21.12     45.25    13.62    22206     0.00     0.00  vider_trans_reciproques_comp(transition_comp*, etat_comp**)
  7.44     50.04     4.80    22206     0.00     0.00  vider_transitions_comp(transition_comp*)
  6.42     54.18     4.14  2274724     0.00     0.00  get_sous_noeud_num_char_det(int, noeud_valeur_det*)
  4.03     56.78     2.60 26400231     0.00     0.00  ajouter_transition_comp(etat_comp**, int, int, int)
  1.58     57.80     1.02        1     1.02     5.48  add_transitions_according_to_epsilon_closure(linked_list_i_comp**, etat_comp**, int)
  1.51     58.77     0.98 52893658     0.00     0.00  nouvelle_transition_comp()
  1.50     59.74     0.97 56903527     0.00     0.00  malloc_comp(int)
  1.37     60.62     0.88  2274724     0.00     0.00  nouveau_char_etats_det()
  1.27     61.44     0.82  2274724     0.00     0.00  get_sous_noeud_valeur_det(int, noeud_num_char_det*)
  1.18     62.20     0.76 12620659     0.00     0.00  u_fputc(unsigned short, _IO_FILE*)
  0.78     62.70     0.50 56903528     0.00     0.00  free_comp(void*)
  0.47     63.00     0.30  1467348     0.00     0.00  u_fprints_char(char*, _IO_FILE*)
  0.42     63.27     0.27    17900     0.00     0.00  init_hachage_det(int*)
  0.29     63.46     0.19  1466130     0.00     0.00  numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int)
  0.26     63.62     0.17                             supprimer_transitioninv_comp(etat_comp**, int, transition_comp*)
  0.19     63.75     0.13    11103     0.00     0.00  nouvel_etat_comp()
  0.18     63.86     0.12                             toupper(unsigned char)
  0.12     63.94     0.08    17900     0.00     0.00  sauvegarder_etat_det(_IO_FILE*, etat_fst_det*)
  0.09     64.00     0.06  1484419     0.00     0.00  liberer_char_etat_det(char_etats_det*)
  0.09     64.06     0.06  1466129     0.00     0.00  nouvelle_transition_mat_det()
  0.06     64.10     0.04  1466129     0.00     0.00  ajouter_transition_mat_det(etat_fst_det*, int, int)
  0.06     64.14     0.04    17900     0.00     0.00  liberer_transition_mat_det(transition_fst_det*)
  0.05     64.17     0.03    63670     0.00     0.00  u_is_greek_extended_letter(unsigned short)
  0.03     64.19     0.02    65536     0.00     0.00  u_is_letter_internal(unsigned short)
  0.03     64.21     0.02    64579     0.00     0.00  u_is_arabic_letter(unsigned short)
  0.03     64.23     0.02    46623     0.00     0.00  nouvelle_liste_branches_valeur_det()
  0.03     64.25     0.02    39515     0.00     0.00  vider_noeud_num_char_det(noeud_num_char_det*)
  0.03     64.27     0.02        9     0.00     0.02  flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*)
  0.03     64.29     0.02        1     0.02     0.02  initialiser_etiquettes()
  0.03     64.31     0.02        1     0.02     0.02  initialiser_graphe_fst2()
  0.03     64.33     0.02                             u_fwrite(unsigned short*, int, _IO_FILE*)
  0.02     64.34     0.01    65536     0.00     0.00  u_is_basic_latin_letter(unsigned short)
  0.02     64.35     0.01    64440     0.00     0.00  u_is_thaana_letter(unsigned short)
  0.02     64.36     0.01    46624     0.00     0.00  vider_noeud_valeur_det(noeud_valeur_det*)
  0.02     64.37     0.01    42787     0.00     0.00  ll_i_insert_sorted(linked_list_i_comp**, unsigned int)
  0.02     64.38     0.01    11103     0.00     0.00  est_a_virer_comp(etat_comp*)
  0.02     64.39     0.01    11103     0.00     0.00  ll_i_free(linked_list_i_comp**)
  0.02     64.40     0.01    10652     0.00     0.00  get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*)
  0.02     64.41     0.01     2979     0.00     0.00  add_closure(linked_list_i_comp**, int, linked_list_i_comp*)
  0.02     64.42     0.01        3     0.00     0.00  co_accessibilite_comp(etat_comp**, int)
  0.02     64.43     0.01        1     0.01     0.01  accessibilite_comp(etat_comp**, int)
  0.02     64.44     0.01        1     0.01     0.01  remove_all_epsilon_transitions(etat_comp**, int)
  0.02     64.45     0.01        1     0.01     0.01  compute_reverse_transitions_of_main_graph(flattened_main_graph_info*)
  0.02     64.46     0.01                             u_fprints_html(unsigned short*, _IO_FILE*)
  0.01     64.46     0.01    64402     0.00     0.00  u_is_devanagari_letter(unsigned short)
  0.01     64.47     0.01    64301     0.00     0.00  u_is_bengali_letter(unsigned short)
  0.01     64.47     0.01    17900     0.00     0.00  nouvel_etat_mat_det()
  0.00     64.47     0.00   235841     0.00     0.00  ll_i_cell_i_compare(ll_i_cell_comp*, ll_i_cell_comp*)
  0.00     64.47     0.00    65484     0.00     0.00  u_is_latin1_supplement_letter(unsigned short)
  0.00     64.47     0.00    65422     0.00     0.00  u_is_latin_extendedA_letter(unsigned short)
  0.00     64.47     0.00    65294     0.00     0.00  u_is_latin_extendedB_letter(unsigned short)
  0.00     64.47     0.00    65116     0.00     0.00  u_is_IPA_extensions_letter(unsigned short)
  0.00     64.47     0.00    65022     0.00     0.00  u_is_greek_letter(unsigned short)
  0.00     64.47     0.00    64917     0.00     0.00  u_is_cyrillic_letter(unsigned short)
  0.00     64.47     0.00    64686     0.00     0.00  u_is_armenian_letter(unsigned short)
  0.00     64.47     0.00    64609     0.00     0.00  u_is_hebrew_letter(unsigned short)
  0.00     64.47     0.00    64236     0.00     0.00  u_is_gurmukhi_letter(unsigned short)
  0.00     64.47     0.00    64173     0.00     0.00  u_is_gujarati_letter(unsigned short)
  0.00     64.47     0.00    64111     0.00     0.00  u_is_oriya_letter(unsigned short)
  0.00     64.47     0.00    64051     0.00     0.00  u_is_tamil_letter(unsigned short)
  0.00     64.47     0.00    64006     0.00     0.00  u_is_telugu_letter(unsigned short)
  0.00     64.47     0.00    63944     0.00     0.00  u_is_kannada_letter(unsigned short)
  0.00     64.47     0.00    63879     0.00     0.00  u_is_malayalam_letter(unsigned short)
  0.00     64.47     0.00    63815     0.00     0.00  u_is_sinhala_letter(unsigned short)
  0.00     64.47     0.00    63739     0.00     0.00  u_is_thai_letter(unsigned short)
  0.00     64.47     0.00    63453     0.00     0.00  u_is_korea_syllabe_letter(unsigned short)
  0.00     64.47     0.00    53890     0.00     0.00  ll_i_pfree(void*)
  0.00     64.47     0.00    53890     0.00     0.00  ll_i_malloc(int)
  0.00     64.47     0.00    52269     0.00     0.00  u_is_CJK_Unified_Ideographs(unsigned short)
  0.00     64.47     0.00    46624     0.00     0.00  nouveau_noeud_valeur_det()
  0.00     64.47     0.00    46598     0.00     0.00  add_reverse_transition_to_state(int, int, etat_comp*)
  0.00     64.47     0.00    42787     0.00     0.00  ll_i_create_cell(unsigned int)
  0.00     64.47     0.00    39515     0.00     0.00  nouveau_noeud_num_char_det()
  0.00     64.47     0.00    39515     0.00     0.00  nouvelle_liste_branches_num_char_det()
  0.00     64.47     0.00    31277     0.00     0.00  u_is_cjk_compatibility_ideographs(unsigned short)
  0.00     64.47     0.00    18711     0.00     0.00  ll_i_cell_i_equals(ll_i_cell_comp*, ll_i_cell_comp*)
  0.00     64.47     0.00    17900     0.00     0.00  liberer_etat_det(etat_fst_det*)
  0.00     64.47     0.00    17899     0.00     0.00  copie_det(char_etats_det*)
  0.00     64.47     0.00    12919     0.00     0.00  u_fgetc(_IO_FILE*)
  0.00     64.47     0.00    11103     0.00     0.00  ll_i_initialize()
  0.00     64.47     0.00    11103     0.00     0.00  liberer_etat_graphe_comp(etat_comp*)
  0.00     64.47     0.00     3660     0.00     0.00  u_strcmp_char(unsigned short const*, char const*)
  0.00     64.47     0.00     3240     0.00     0.00  lire_entier_fst2(_IO_FILE*, int*)
  0.00     64.47     0.00     2428     0.00     0.00  u_strlen(unsigned short const*)
  0.00     64.47     0.00     1415     0.00     0.00  ajouter_transition_mat(etat_fst*, int, int)
  0.00     64.47     0.00     1415     0.00     0.00  nouvelle_transition_mat()
  0.00     64.47     0.00     1239     0.00     0.00  u_strcpy(unsigned short*, unsigned short const*)
  0.00     64.47     0.00      609     0.00     0.00  u_fprints(unsigned short*, _IO_FILE*)
  0.00     64.47     0.00      607     0.00     0.00  free_etiquette(etiq_*)
  0.00     64.47     0.00      607     0.00     0.00  creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int)
  0.00     64.47     0.00      607     0.00     0.00  ajouter_etiquette_fst2(unsigned short*)
  0.00     64.47     0.00      607     0.00     0.00  nouvelle_etiquette_mat()
  0.00     64.47     0.00      410     0.00     0.00  nouvel_etat()
  0.00     64.47     0.00      410     0.00     0.00  free_transition(transition_fst*)
  0.00     64.47     0.00      410     0.00     0.00  free_etat(etat_fst*)
  0.00     64.47     0.00       74     0.00     0.00  u_is_digit(unsigned short)
  0.00     64.47     0.00       55     0.00     0.00  inserer_dans_liste_nombres(int, liste_nombres*)
  0.00     64.47     0.00       26     0.00     0.00  new_liste_nombres()
  0.00     64.47     0.00       25     0.00     0.00  u_read_int(_IO_FILE*)
  0.00     64.47     0.00       24     0.00     0.00  free_liste_nombres(liste_nombres*)
  0.00     64.47     0.00       24     0.00     0.00  compute_dependences_for_subgraph(automate_fst2*, int, liste_nombres**)
  0.00     64.47     0.00        4     0.00     0.00  decomposer_angles_etiquette_fst2(etiq_*)
  0.00     64.47     0.00        2     0.00     0.00  u_fopen(char*, char*)
  0.00     64.47     0.00        2     0.00     0.00  u_fclose(_IO_FILE*)
  0.00     64.47     0.00        1     0.00     0.10  global constructors keyed to tab_is_letter
  0.00     64.47     0.00        1     0.00    64.02  flatten_fst2(automate_fst2*, int, char*, int)
  0.00     64.47     0.00        1     0.00     0.01  free_closures(linked_list_i_comp**, int)
  0.00     64.47     0.00        1     0.00     0.00  setBufferMode()
  0.00     64.47     0.00        1     0.00     0.00  init_stock_det(char_etats_det**)
  0.00     64.47     0.00        1     0.00     0.00  init_resultat_det(etat_fst_det**, noeud_valeur_det*, int)
  0.00     64.47     0.00        1     0.00     0.03  liberer_arbre_det(noeud_valeur_det*)
  0.00     64.47     0.00        1     0.00     0.00  new_Automate_fst2()
  0.00     64.47     0.00        1     0.00     0.15  flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int)
  0.00     64.47     0.00        1     0.00     0.10  init_unicode_table()
  0.00     64.47     0.00        1     0.00     0.00  compute_dependences(automate_fst2*)
  0.00     64.47     0.00        1     0.00     0.00  copy_tags_into_file(automate_fst2*, _IO_FILE*)
  0.00     64.47     0.00        1     0.00    13.63  eliminer_etats_comp(etat_comp**, int*)
  0.00     64.47     0.00        1     0.00     0.00  init_graphe_mat_det(etat_fst_det**)
  0.00     64.47     0.00        1     0.00     0.00  save_graphs_to_keep(automate_fst2*, _IO_FILE*)
  0.00     64.47     0.00        1     0.00     0.03  get_epsilon_closures(etat_comp**, int)
  0.00     64.47     0.00        1     0.00     0.00  lire_etiquettes_fst2(_IO_FILE*)
  0.00     64.47     0.00        1     0.00     0.00  liberer_liste_variables(variable_list*)
  0.00     64.47     0.00        1     0.00     0.00  renumber_graphs_to_keep(automate_fst2*)
  0.00     64.47     0.00        1     0.00     0.00  check_for_graphs_to_keep(automate_fst2*, int)
  0.00     64.47     0.00        1     0.00     0.00  lire_etats_fst2_avec_noms(_IO_FILE*)
  0.00     64.47     0.00        1     0.00     0.04  initialiser_variables_fst2()
  0.00     64.47     0.00        1     0.00     0.00  new_flattened_main_graph_info()
  0.00     64.47     0.00        1     0.00     5.26  free_flattened_main_graph_info(flattened_main_graph_info*)
  0.00     64.47     0.00        1     0.00     5.53  virer_epsilon_transitions_comp(etat_comp**, int)
  0.00     64.47     0.00        1     0.00     0.00  check_if_subgraphs_must_be_kept(int, int, int)
  0.00     64.47     0.00        1     0.00     0.10  __static_initialization_and_destruction_0(int, int)
  0.00     64.47     0.00        1     0.00     0.00  resize(automate_fst2*)
  0.00     64.47     0.00        1     0.00     0.00  u_fputc(int, _IO_FILE*)
  0.00     64.47     0.00        1     0.00     0.00  free_fst2(automate_fst2*)
  0.00     64.47     0.00        1     0.00     0.04  load_fst2(char*, int)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Aufrufgraph (Erklärung folgt)


Granularität: jeder Stichprobentreffer deckt 2 Byte(s) ab für 0.02% von 64.47 Sekunden

Index % Zeit   Selb. Kinder      aufgerufen Name
                                                 <spontan>
[1]     99.4    0.00   64.06                 main [1]
                0.00   64.02       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
                0.00    0.04       1/1           load_fst2(char*, int) [39]
                0.00    0.00       1/1           setBufferMode() [132]
                0.00    0.00       1/1           free_fst2(automate_fst2*) [146]
-----------------------------------------------
                0.00   64.02       1/1           main [1]
[2]     99.3    0.00   64.02       1         flatten_fst2(automate_fst2*, int, char*, int) [2]
               17.60   21.82       1/1           determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
                0.00   13.63       1/1           eliminer_etats_comp(etat_comp**, int*) [5]
                0.00    5.53       1/1           virer_epsilon_transitions_comp(etat_comp**, int) [7]
                0.00    5.26       1/1           free_flattened_main_graph_info(flattened_main_graph_info*) [10]
                0.00    0.15       1/1           flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int) [25]
                0.01    0.00       1/1           compute_reverse_transitions_of_main_graph(flattened_main_graph_info*) [53]
                0.01    0.00       3/3           co_accessibilite_comp(etat_comp**, int) [61]
                0.01    0.00       1/1           accessibilite_comp(etat_comp**, int) [63]
                0.00    0.00       1/1           copy_tags_into_file(automate_fst2*, _IO_FILE*) [70]
                0.00    0.00       2/1467348     u_fprints_char(char*, _IO_FILE*) [17]
                0.00    0.00       1/609         u_fprints(unsigned short*, _IO_FILE*) [74]
                0.00    0.00       1/2           u_fopen(char*, char*) [76]
                0.00    0.00      24/24          free_liste_nombres(liste_nombres*) [128]
                0.00    0.00       1/1           compute_dependences(automate_fst2*) [135]
                0.00    0.00       1/1           check_for_graphs_to_keep(automate_fst2*, int) [141]
                0.00    0.00       1/1           renumber_graphs_to_keep(automate_fst2*) [140]
                0.00    0.00       1/1           new_flattened_main_graph_info() [143]
                0.00    0.00       1/1           save_graphs_to_keep(automate_fst2*, _IO_FILE*) [137]
                0.00    0.00       1/2           u_fclose(_IO_FILE*) [131]
-----------------------------------------------
               17.60   21.82       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[3]     61.1   17.60   21.82       1         determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
               14.03    0.92 313603944/313603945     ajouter_etat_dans_ensemble_det(int, char_etats_det**) [4]
                0.19    4.98 1466129/1466130     numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
                0.08    1.06   17900/17900       sauvegarder_etat_det(_IO_FILE*, etat_fst_det*) [16]
                0.27    0.00   17900/17900       init_hachage_det(int*) [23]
                0.04    0.08 1466129/1466129     ajouter_transition_mat_det(etat_fst_det*, int, int) [28]
                0.06    0.02 1466519/1484419     liberer_char_etat_det(char_etats_det*) [35]
                0.00    0.05   17900/17900       liberer_etat_det(etat_fst_det*) [37]
                0.00    0.03       1/1           liberer_arbre_det(noeud_valeur_det*) [41]
                0.00    0.00   17899/17900       nouvel_etat_mat_det() [65]
                0.00    0.00   17899/17899       copie_det(char_etats_det*) [69]
                0.00    0.00       1/1           init_resultat_det(etat_fst_det**, noeud_valeur_det*, int) [75]
                0.00    0.00       1/1467348     u_fprints_char(char*, _IO_FILE*) [17]
                0.00    0.00       1/46624       nouveau_noeud_valeur_det() [71]
                0.00    0.00       1/1           init_graphe_mat_det(etat_fst_det**) [136]
                0.00    0.00       1/1           init_stock_det(char_etats_det**) [133]
-----------------------------------------------
                0.00    0.00       1/313603945     init_resultat_det(etat_fst_det**, noeud_valeur_det*, int) [75]
               14.03    0.92 313603944/313603945     determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[4]     23.2   14.03    0.92 313603945         ajouter_etat_dans_ensemble_det(int, char_etats_det**) [4]
                0.88    0.04 2274724/2274724     nouveau_char_etats_det() [19]
-----------------------------------------------
                0.00   13.63       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[5]     21.1    0.00   13.63       1         eliminer_etats_comp(etat_comp**, int*) [5]
               13.62    0.00   22206/22206       vider_trans_reciproques_comp(transition_comp*, etat_comp**) [6]
                0.01    0.00   11103/11103       est_a_virer_comp(etat_comp*) [59]
-----------------------------------------------
                             52887700             vider_trans_reciproques_comp(transition_comp*, etat_comp**) [6]
               13.62    0.00   22206/22206       eliminer_etats_comp(etat_comp**, int*) [5]
[6]     21.1   13.62    0.00   22206+52887700 vider_trans_reciproques_comp(transition_comp*, etat_comp**) [6]
                             52887700             vider_trans_reciproques_comp(transition_comp*, etat_comp**) [6]
-----------------------------------------------
                0.00    5.53       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[7]      8.6    0.00    5.53       1         virer_epsilon_transitions_comp(etat_comp**, int) [7]
                1.02    4.46       1/1           add_transitions_according_to_epsilon_closure(linked_list_i_comp**, etat_comp**, int) [8]
                0.00    0.03       1/1           get_epsilon_closures(etat_comp**, int) [45]
                0.01    0.00       1/1           remove_all_epsilon_transitions(etat_comp**, int) [55]
                0.00    0.01       1/1           free_closures(linked_list_i_comp**, int) [62]
                0.00    0.00       1/56903528     free_comp(void*) [22]
-----------------------------------------------
                1.02    4.46       1/1           virer_epsilon_transitions_comp(etat_comp**, int) [7]
[8]      8.5    1.02    4.46       1         add_transitions_according_to_epsilon_closure(linked_list_i_comp**, etat_comp**, int) [8]
                2.60    1.87 26400231/26400231     ajouter_transition_comp(etat_comp**, int, int, int) [13]
-----------------------------------------------
                0.00    5.26   11103/11103       free_flattened_main_graph_info(flattened_main_graph_info*) [10]
[9]      8.2    0.00    5.26   11103         liberer_etat_graphe_comp(etat_comp*) [9]
                4.80    0.46   22206/22206       vider_transitions_comp(transition_comp*) [11]
                0.00    0.00   11103/56903528     free_comp(void*) [22]
-----------------------------------------------
                0.00    5.26       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[10]     8.2    0.00    5.26       1         free_flattened_main_graph_info(flattened_main_graph_info*) [10]
                0.00    5.26   11103/11103       liberer_etat_graphe_comp(etat_comp*) [9]
-----------------------------------------------
                             52887700             vider_transitions_comp(transition_comp*) [11]
                4.80    0.46   22206/22206       liberer_etat_graphe_comp(etat_comp*) [9]
[11]     8.2    4.80    0.46   22206+52887700 vider_transitions_comp(transition_comp*) [11]
                0.46    0.00 52887700/56903528     free_comp(void*) [22]
                             52887700             vider_transitions_comp(transition_comp*) [11]
-----------------------------------------------
                             2274724             numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
                0.00    0.00       1/1466130     init_resultat_det(etat_fst_det**, noeud_valeur_det*, int) [75]
                0.19    4.98 1466129/1466130     determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[12]     8.0    0.19    4.98 1466130+2274724 numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
                4.14    0.00 2274724/2274724     get_sous_noeud_num_char_det(int, noeud_valeur_det*) [14]
                0.82    0.02 2274724/2274724     get_sous_noeud_valeur_det(int, noeud_num_char_det*) [20]
                             2274724             numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
-----------------------------------------------
                2.60    1.87 26400231/26400231     add_transitions_according_to_epsilon_closure(linked_list_i_comp**, etat_comp**, int) [8]
[13]     6.9    2.60    1.87 26400231         ajouter_transition_comp(etat_comp**, int, int, int) [13]
                0.97    0.90 52800462/52893658     nouvelle_transition_comp() [15]
-----------------------------------------------
                4.14    0.00 2274724/2274724     numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
[14]     6.4    4.14    0.00 2274724         get_sous_noeud_num_char_det(int, noeud_valeur_det*) [14]
                0.00    0.00   39515/39515       nouvelle_liste_branches_num_char_det() [73]
                0.00    0.00   39515/39515       nouveau_noeud_num_char_det() [72]
-----------------------------------------------
                0.00    0.00      26/52893658     flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int) [25]
                0.00    0.00   46572/52893658     flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*) [26]
                0.00    0.00   46598/52893658     add_reverse_transition_to_state(int, int, etat_comp*) [68]
                0.97    0.90 52800462/52893658     ajouter_transition_comp(etat_comp**, int, int, int) [13]
[15]     2.9    0.98    0.90 52893658         nouvelle_transition_comp() [15]
                0.90    0.00 52893658/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.08    1.06   17900/17900       determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[16]     1.8    0.08    1.06   17900         sauvegarder_etat_det(_IO_FILE*, etat_fst_det*) [16]
                0.30    0.76 1466129/1467348     u_fprints_char(char*, _IO_FILE*) [17]
                0.00    0.00   53700/12620659     u_fputc(unsigned short, _IO_FILE*) [21]
-----------------------------------------------
                0.00    0.00       1/1467348     determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
                0.00    0.00       2/1467348     flatten_fst2(automate_fst2*, int, char*, int) [2]
                0.00    0.00    1216/1467348     copy_tags_into_file(automate_fst2*, _IO_FILE*) [70]
                0.30    0.76 1466129/1467348     sauvegarder_etat_det(_IO_FILE*, etat_fst_det*) [16]
[17]     1.6    0.30    0.76 1467348         u_fprints_char(char*, _IO_FILE*) [17]
                0.76    0.00 12565314/12620659     u_fputc(unsigned short, _IO_FILE*) [21]
-----------------------------------------------
                0.00    0.00   11103/56903527     nouvel_etat_comp() [27]
                0.00    0.00   17900/56903527     nouvel_etat_mat_det() [65]
                0.00    0.00   39515/56903527     nouveau_noeud_num_char_det() [72]
                0.00    0.00   39515/56903527     nouvelle_liste_branches_num_char_det() [73]
                0.00    0.00   46623/56903527     nouvelle_liste_branches_valeur_det() [47]
                0.00    0.00   46624/56903527     nouveau_noeud_valeur_det() [71]
                0.00    0.00   67736/56903527     copie_det(char_etats_det*) [69]
                0.02    0.00 1466129/56903527     nouvelle_transition_mat_det() [36]
                0.04    0.00 2274724/56903527     nouveau_char_etats_det() [19]
                0.90    0.00 52893658/56903527     nouvelle_transition_comp() [15]
[18]     1.5    0.97    0.00 56903527         malloc_comp(int) [18]
-----------------------------------------------
                0.88    0.04 2274724/2274724     ajouter_etat_dans_ensemble_det(int, char_etats_det**) [4]
[19]     1.4    0.88    0.04 2274724         nouveau_char_etats_det() [19]
                0.04    0.00 2274724/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.82    0.02 2274724/2274724     numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
[20]     1.3    0.82    0.02 2274724         get_sous_noeud_valeur_det(int, noeud_num_char_det*) [20]
                0.02    0.00   46623/46623       nouvelle_liste_branches_valeur_det() [47]
                0.00    0.00   46623/46624       nouveau_noeud_valeur_det() [71]
-----------------------------------------------
                0.00    0.00       1/12620659     u_fputc(int, _IO_FILE*) [77]
                0.00    0.00    1644/12620659     u_fprints(unsigned short*, _IO_FILE*) [74]
                0.00    0.00   53700/12620659     sauvegarder_etat_det(_IO_FILE*, etat_fst_det*) [16]
                0.76    0.00 12565314/12620659     u_fprints_char(char*, _IO_FILE*) [17]
[21]     1.2    0.76    0.00 12620659         u_fputc(unsigned short, _IO_FILE*) [21]
-----------------------------------------------
                0.00    0.00       1/56903528     liberer_arbre_det(noeud_valeur_det*) [41]
                0.00    0.00       1/56903528     virer_epsilon_transitions_comp(etat_comp**, int) [7]
                0.00    0.00    5958/56903528     remove_all_epsilon_transitions(etat_comp**, int) [55]
                0.00    0.00   11103/56903528     liberer_etat_graphe_comp(etat_comp*) [9]
                0.00    0.00   17900/56903528     liberer_etat_det(etat_fst_det*) [37]
                0.00    0.00   79030/56903528     vider_noeud_valeur_det(noeud_valeur_det*) <Zyklus 1> [54]
                0.00    0.00   93246/56903528     vider_noeud_num_char_det(noeud_num_char_det*) <Zyklus 1> [46]
                0.01    0.00 1466129/56903528     liberer_transition_mat_det(transition_fst_det*) [38]
                0.02    0.00 2342460/56903528     liberer_char_etat_det(char_etats_det*) [35]
                0.46    0.00 52887700/56903528     vider_transitions_comp(transition_comp*) [11]
[22]     0.8    0.50    0.00 56903528         free_comp(void*) [22]
-----------------------------------------------
                0.27    0.00   17900/17900       determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[23]     0.4    0.27    0.00   17900         init_hachage_det(int*) [23]
-----------------------------------------------
                                                 <spontan>
[24]     0.3    0.17    0.00                 supprimer_transitioninv_comp(etat_comp**, int, transition_comp*) [24]
-----------------------------------------------
                0.00    0.15       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[25]     0.2    0.00    0.15       1         flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int) [25]
                0.02    0.13       9/9           flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*) [26]
                0.00    0.00      11/11103       nouvel_etat_comp() [27]
                0.00    0.00      26/52893658     nouvelle_transition_comp() [15]
-----------------------------------------------
                                 442             flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*) [26]
                0.02    0.13       9/9           flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int) [25]
[26]     0.2    0.02    0.13       9+442     flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*) [26]
                0.12    0.00   11092/11103       nouvel_etat_comp() [27]
                0.00    0.00   46572/52893658     nouvelle_transition_comp() [15]
                                 442             flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*) [26]
-----------------------------------------------
                0.00    0.00      11/11103       flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int) [25]
                0.12    0.00   11092/11103       flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*) [26]
[27]     0.2    0.13    0.00   11103         nouvel_etat_comp() [27]
                0.00    0.00   11103/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.04    0.08 1466129/1466129     determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[28]     0.2    0.04    0.08 1466129         ajouter_transition_mat_det(etat_fst_det*, int, int) [28]
                0.06    0.02 1466129/1466129     nouvelle_transition_mat_det() [36]
-----------------------------------------------
                                                 <spontan>
[29]     0.2    0.12    0.00                 toupper(unsigned char) [29]
-----------------------------------------------
                0.00    0.10       1/1           __do_global_ctors_aux [33]
[30]     0.2    0.00    0.10       1         global constructors keyed to tab_is_letter [30]
                0.00    0.10       1/1           __static_initialization_and_destruction_0(int, int) [32]
-----------------------------------------------
                0.00    0.10       1/1           __static_initialization_and_destruction_0(int, int) [32]
[31]     0.2    0.00    0.10       1         init_unicode_table() [31]
                0.02    0.08   65536/65536       u_is_letter_internal(unsigned short) [34]
-----------------------------------------------
                0.00    0.10       1/1           global constructors keyed to tab_is_letter [30]
[32]     0.2    0.00    0.10       1         __static_initialization_and_destruction_0(int, int) [32]
                0.00    0.10       1/1           init_unicode_table() [31]
-----------------------------------------------
                                                 <spontan>
[33]     0.2    0.00    0.10                 __do_global_ctors_aux [33]
                0.00    0.10       1/1           global constructors keyed to tab_is_letter [30]
-----------------------------------------------
                0.02    0.08   65536/65536       init_unicode_table() [31]
[34]     0.2    0.02    0.08   65536         u_is_letter_internal(unsigned short) [34]
                0.03    0.00   63670/63670       u_is_greek_extended_letter(unsigned short) [44]
                0.02    0.00   64579/64579       u_is_arabic_letter(unsigned short) [48]
                0.01    0.00   65536/65536       u_is_basic_latin_letter(unsigned short) [56]
                0.01    0.00   64440/64440       u_is_thaana_letter(unsigned short) [57]
                0.01    0.00   64402/64402       u_is_devanagari_letter(unsigned short) [66]
                0.01    0.00   64301/64301       u_is_bengali_letter(unsigned short) [67]
                0.00    0.00   65484/65484       u_is_latin1_supplement_letter(unsigned short) [85]
                0.00    0.00   65422/65422       u_is_latin_extendedA_letter(unsigned short) [86]
                0.00    0.00   65294/65294       u_is_latin_extendedB_letter(unsigned short) [87]
                0.00    0.00   65116/65116       u_is_IPA_extensions_letter(unsigned short) [88]
                0.00    0.00   65022/65022       u_is_greek_letter(unsigned short) [89]
                0.00    0.00   64917/64917       u_is_cyrillic_letter(unsigned short) [90]
                0.00    0.00   64686/64686       u_is_armenian_letter(unsigned short) [91]
                0.00    0.00   64609/64609       u_is_hebrew_letter(unsigned short) [92]
                0.00    0.00   64236/64236       u_is_gurmukhi_letter(unsigned short) [93]
                0.00    0.00   64173/64173       u_is_gujarati_letter(unsigned short) [94]
                0.00    0.00   64111/64111       u_is_oriya_letter(unsigned short) [95]
                0.00    0.00   64051/64051       u_is_tamil_letter(unsigned short) [96]
                0.00    0.00   64006/64006       u_is_telugu_letter(unsigned short) [97]
                0.00    0.00   63944/63944       u_is_kannada_letter(unsigned short) [98]
                0.00    0.00   63879/63879       u_is_malayalam_letter(unsigned short) [99]
                0.00    0.00   63815/63815       u_is_sinhala_letter(unsigned short) [100]
                0.00    0.00   63739/63739       u_is_thai_letter(unsigned short) [101]
                0.00    0.00   63453/63453       u_is_korea_syllabe_letter(unsigned short) [102]
                0.00    0.00   52269/52269       u_is_CJK_Unified_Ideographs(unsigned short) [105]
                0.00    0.00   31277/31277       u_is_cjk_compatibility_ideographs(unsigned short) [107]
-----------------------------------------------
                0.00    0.00   17900/1484419     liberer_etat_det(etat_fst_det*) [37]
                0.06    0.02 1466519/1484419     determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[35]     0.1    0.06    0.02 1484419         liberer_char_etat_det(char_etats_det*) [35]
                0.02    0.00 2342460/56903528     free_comp(void*) [22]
-----------------------------------------------
                0.06    0.02 1466129/1466129     ajouter_transition_mat_det(etat_fst_det*, int, int) [28]
[36]     0.1    0.06    0.02 1466129         nouvelle_transition_mat_det() [36]
                0.02    0.00 1466129/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.00    0.05   17900/17900       determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[37]     0.1    0.00    0.05   17900         liberer_etat_det(etat_fst_det*) [37]
                0.04    0.01   17900/17900       liberer_transition_mat_det(transition_fst_det*) [38]
                0.00    0.00   17900/1484419     liberer_char_etat_det(char_etats_det*) [35]
                0.00    0.00   17900/56903528     free_comp(void*) [22]
-----------------------------------------------
                0.04    0.01   17900/17900       liberer_etat_det(etat_fst_det*) [37]
[38]     0.1    0.04    0.01   17900         liberer_transition_mat_det(transition_fst_det*) [38]
                0.01    0.00 1466129/56903528     free_comp(void*) [22]
-----------------------------------------------
                0.00    0.04       1/1           main [1]
[39]     0.1    0.00    0.04       1         load_fst2(char*, int) [39]
                0.00    0.04       1/1           initialiser_variables_fst2() [40]
                0.00    0.00       1/2           u_fopen(char*, char*) [76]
                0.00    0.00       1/1           new_Automate_fst2() [134]
                0.00    0.00       1/25          u_read_int(_IO_FILE*) [127]
                0.00    0.00       1/1           lire_etats_fst2_avec_noms(_IO_FILE*) [142]
                0.00    0.00       1/1           lire_etiquettes_fst2(_IO_FILE*) [138]
                0.00    0.00       1/2           u_fclose(_IO_FILE*) [131]
                0.00    0.00       1/1           resize(automate_fst2*) [145]
-----------------------------------------------
                0.00    0.04       1/1           load_fst2(char*, int) [39]
[40]     0.1    0.00    0.04       1         initialiser_variables_fst2() [40]
                0.02    0.00       1/1           initialiser_graphe_fst2() [50]
                0.02    0.00       1/1           initialiser_etiquettes() [49]
-----------------------------------------------
                0.00    0.03       1/1           determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[41]     0.0    0.00    0.03       1         liberer_arbre_det(noeud_valeur_det*) [41]
                0.03    0.00       1/1           vider_noeud_valeur_det(noeud_valeur_det*) <Zyklus 1> [54]
                0.00    0.00       1/56903528     free_comp(void*) [22]
-----------------------------------------------
[42]     0.0    0.03    0.00       1+86138   <Zyklus 1 als Ganzes> [42]
                0.01    0.00   46624             vider_noeud_valeur_det(noeud_valeur_det*) <Zyklus 1> [54]
-----------------------------------------------
                                2979             get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [43]
                0.01    0.02   10652/10652       get_epsilon_closures(etat_comp**, int) [45]
[43]     0.0    0.01    0.02   10652+2979    get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [43]
                0.01    0.01    2979/2979        add_closure(linked_list_i_comp**, int, linked_list_i_comp*) [52]
                0.00    0.00   11103/42787       ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
                                2979             get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [43]
-----------------------------------------------
                0.03    0.00   63670/63670       u_is_letter_internal(unsigned short) [34]
[44]     0.0    0.03    0.00   63670         u_is_greek_extended_letter(unsigned short) [44]
-----------------------------------------------
                0.00    0.03       1/1           virer_epsilon_transitions_comp(etat_comp**, int) [7]
[45]     0.0    0.00    0.03       1         get_epsilon_closures(etat_comp**, int) [45]
                0.01    0.02   10652/10652       get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [43]
-----------------------------------------------
                               39515             vider_noeud_valeur_det(noeud_valeur_det*) <Zyklus 1> [54]
[46]     0.0    0.02    0.00   39515         vider_noeud_num_char_det(noeud_num_char_det*) <Zyklus 1> [46]
                0.00    0.00   93246/56903528     free_comp(void*) [22]
                               46623             vider_noeud_valeur_det(noeud_valeur_det*) <Zyklus 1> [54]
-----------------------------------------------
                0.02    0.00   46623/46623       get_sous_noeud_valeur_det(int, noeud_num_char_det*) [20]
[47]     0.0    0.02    0.00   46623         nouvelle_liste_branches_valeur_det() [47]
                0.00    0.00   46623/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.02    0.00   64579/64579       u_is_letter_internal(unsigned short) [34]
[48]     0.0    0.02    0.00   64579         u_is_arabic_letter(unsigned short) [48]
-----------------------------------------------
                0.02    0.00       1/1           initialiser_variables_fst2() [40]
[49]     0.0    0.02    0.00       1         initialiser_etiquettes() [49]
-----------------------------------------------
                0.02    0.00       1/1           initialiser_variables_fst2() [40]
[50]     0.0    0.02    0.00       1         initialiser_graphe_fst2() [50]
-----------------------------------------------
                                                 <spontan>
[51]     0.0    0.02    0.00                 u_fwrite(unsigned short*, int, _IO_FILE*) [51]
-----------------------------------------------
                0.01    0.01    2979/2979        get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [43]
[52]     0.0    0.01    0.01    2979         add_closure(linked_list_i_comp**, int, linked_list_i_comp*) [52]
                0.01    0.00   31684/42787       ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
-----------------------------------------------
                0.01    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[53]     0.0    0.01    0.00       1         compute_reverse_transitions_of_main_graph(flattened_main_graph_info*) [53]
                0.00    0.00   46598/46598       add_reverse_transition_to_state(int, int, etat_comp*) [68]
-----------------------------------------------
                               46623             vider_noeud_num_char_det(noeud_num_char_det*) <Zyklus 1> [46]
                0.03    0.00       1/1           liberer_arbre_det(noeud_valeur_det*) [41]
[54]     0.0    0.01    0.00   46624         vider_noeud_valeur_det(noeud_valeur_det*) <Zyklus 1> [54]
                0.00    0.00   79030/56903528     free_comp(void*) [22]
                               39515             vider_noeud_num_char_det(noeud_num_char_det*) <Zyklus 1> [46]
-----------------------------------------------
                0.01    0.00       1/1           virer_epsilon_transitions_comp(etat_comp**, int) [7]
[55]     0.0    0.01    0.00       1         remove_all_epsilon_transitions(etat_comp**, int) [55]
                0.00    0.00    5958/56903528     free_comp(void*) [22]
-----------------------------------------------
                0.01    0.00   65536/65536       u_is_letter_internal(unsigned short) [34]
[56]     0.0    0.01    0.00   65536         u_is_basic_latin_letter(unsigned short) [56]
-----------------------------------------------
                0.01    0.00   64440/64440       u_is_letter_internal(unsigned short) [34]
[57]     0.0    0.01    0.00   64440         u_is_thaana_letter(unsigned short) [57]
-----------------------------------------------
                0.00    0.00   11103/42787       get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [43]
                0.01    0.00   31684/42787       add_closure(linked_list_i_comp**, int, linked_list_i_comp*) [52]
[58]     0.0    0.01    0.00   42787         ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
                0.00    0.00  235841/235841      ll_i_cell_i_compare(ll_i_cell_comp*, ll_i_cell_comp*) [84]
                0.00    0.00   42787/42787       ll_i_create_cell(unsigned int) [106]
                0.00    0.00   18711/18711       ll_i_cell_i_equals(ll_i_cell_comp*, ll_i_cell_comp*) [108]
                0.00    0.00   11103/11103       ll_i_initialize() [110]
-----------------------------------------------
                0.01    0.00   11103/11103       eliminer_etats_comp(etat_comp**, int*) [5]
[59]     0.0    0.01    0.00   11103         est_a_virer_comp(etat_comp*) [59]
-----------------------------------------------
                0.01    0.00   11103/11103       free_closures(linked_list_i_comp**, int) [62]
[60]     0.0    0.01    0.00   11103         ll_i_free(linked_list_i_comp**) [60]
                0.00    0.00   53890/53890       ll_i_pfree(void*) [103]
-----------------------------------------------
                               46598             co_accessibilite_comp(etat_comp**, int) [61]
                0.01    0.00       3/3           flatten_fst2(automate_fst2*, int, char*, int) [2]
[61]     0.0    0.01    0.00       3+46598   co_accessibilite_comp(etat_comp**, int) [61]
                               46598             co_accessibilite_comp(etat_comp**, int) [61]
-----------------------------------------------
                0.00    0.01       1/1           virer_epsilon_transitions_comp(etat_comp**, int) [7]
[62]     0.0    0.00    0.01       1         free_closures(linked_list_i_comp**, int) [62]
                0.01    0.00   11103/11103       ll_i_free(linked_list_i_comp**) [60]
-----------------------------------------------
                               46598             accessibilite_comp(etat_comp**, int) [63]
                0.01    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[63]     0.0    0.01    0.00       1+46598   accessibilite_comp(etat_comp**, int) [63]
                               46598             accessibilite_comp(etat_comp**, int) [63]
-----------------------------------------------
                                                 <spontan>
[64]     0.0    0.01    0.00                 u_fprints_html(unsigned short*, _IO_FILE*) [64]
-----------------------------------------------
                0.00    0.00       1/17900       init_resultat_det(etat_fst_det**, noeud_valeur_det*, int) [75]
                0.00    0.00   17899/17900       determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[65]     0.0    0.01    0.00   17900         nouvel_etat_mat_det() [65]
                0.00    0.00   17900/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.01    0.00   64402/64402       u_is_letter_internal(unsigned short) [34]
[66]     0.0    0.01    0.00   64402         u_is_devanagari_letter(unsigned short) [66]
-----------------------------------------------
                0.01    0.00   64301/64301       u_is_letter_internal(unsigned short) [34]
[67]     0.0    0.01    0.00   64301         u_is_bengali_letter(unsigned short) [67]
-----------------------------------------------
                0.00    0.00   46598/46598       compute_reverse_transitions_of_main_graph(flattened_main_graph_info*) [53]
[68]     0.0    0.00    0.00   46598         add_reverse_transition_to_state(int, int, etat_comp*) [68]
                0.00    0.00   46598/52893658     nouvelle_transition_comp() [15]
-----------------------------------------------
                               67736             copie_det(char_etats_det*) [69]
                0.00    0.00   17899/17899       determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[69]     0.0    0.00    0.00   17899+67736   copie_det(char_etats_det*) [69]
                0.00    0.00   67736/56903527     malloc_comp(int) [18]
                               67736             copie_det(char_etats_det*) [69]
-----------------------------------------------
                0.00    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[70]     0.0    0.00    0.00       1         copy_tags_into_file(automate_fst2*, _IO_FILE*) [70]
                0.00    0.00    1216/1467348     u_fprints_char(char*, _IO_FILE*) [17]
                0.00    0.00     608/609         u_fprints(unsigned short*, _IO_FILE*) [74]
-----------------------------------------------
                0.00    0.00       1/46624       determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
                0.00    0.00   46623/46624       get_sous_noeud_valeur_det(int, noeud_num_char_det*) [20]
[71]     0.0    0.00    0.00   46624         nouveau_noeud_valeur_det() [71]
                0.00    0.00   46624/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.00    0.00   39515/39515       get_sous_noeud_num_char_det(int, noeud_valeur_det*) [14]
[72]     0.0    0.00    0.00   39515         nouveau_noeud_num_char_det() [72]
                0.00    0.00   39515/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.00    0.00   39515/39515       get_sous_noeud_num_char_det(int, noeud_valeur_det*) [14]
[73]     0.0    0.00    0.00   39515         nouvelle_liste_branches_num_char_det() [73]
                0.00    0.00   39515/56903527     malloc_comp(int) [18]
-----------------------------------------------
                0.00    0.00       1/609         flatten_fst2(automate_fst2*, int, char*, int) [2]
                0.00    0.00     608/609         copy_tags_into_file(automate_fst2*, _IO_FILE*) [70]
[74]     0.0    0.00    0.00     609         u_fprints(unsigned short*, _IO_FILE*) [74]
                0.00    0.00    1644/12620659     u_fputc(unsigned short, _IO_FILE*) [21]
-----------------------------------------------
                0.00    0.00       1/1           determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[75]     0.0    0.00    0.00       1         init_resultat_det(etat_fst_det**, noeud_valeur_det*, int) [75]
                0.00    0.00       1/1466130     numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [12]
                0.00    0.00       1/17900       nouvel_etat_mat_det() [65]
                0.00    0.00       1/313603945     ajouter_etat_dans_ensemble_det(int, char_etats_det**) [4]
-----------------------------------------------
                0.00    0.00       1/2           load_fst2(char*, int) [39]
                0.00    0.00       1/2           flatten_fst2(automate_fst2*, int, char*, int) [2]
[76]     0.0    0.00    0.00       2         u_fopen(char*, char*) [76]
                0.00    0.00       1/1           u_fputc(int, _IO_FILE*) [77]
                0.00    0.00       1/12919       u_fgetc(_IO_FILE*) [109]
-----------------------------------------------
                0.00    0.00       1/1           u_fopen(char*, char*) [76]
[77]     0.0    0.00    0.00       1         u_fputc(int, _IO_FILE*) [77]
                0.00    0.00       1/12620659     u_fputc(unsigned short, _IO_FILE*) [21]
-----------------------------------------------
                0.00    0.00  235841/235841      ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
[84]     0.0    0.00    0.00  235841         ll_i_cell_i_compare(ll_i_cell_comp*, ll_i_cell_comp*) [84]
-----------------------------------------------
                0.00    0.00   65484/65484       u_is_letter_internal(unsigned short) [34]
[85]     0.0    0.00    0.00   65484         u_is_latin1_supplement_letter(unsigned short) [85]
-----------------------------------------------
                0.00    0.00   65422/65422       u_is_letter_internal(unsigned short) [34]
[86]     0.0    0.00    0.00   65422         u_is_latin_extendedA_letter(unsigned short) [86]
-----------------------------------------------
                0.00    0.00   65294/65294       u_is_letter_internal(unsigned short) [34]
[87]     0.0    0.00    0.00   65294         u_is_latin_extendedB_letter(unsigned short) [87]
-----------------------------------------------
                0.00    0.00   65116/65116       u_is_letter_internal(unsigned short) [34]
[88]     0.0    0.00    0.00   65116         u_is_IPA_extensions_letter(unsigned short) [88]
-----------------------------------------------
                0.00    0.00   65022/65022       u_is_letter_internal(unsigned short) [34]
[89]     0.0    0.00    0.00   65022         u_is_greek_letter(unsigned short) [89]
-----------------------------------------------
                0.00    0.00   64917/64917       u_is_letter_internal(unsigned short) [34]
[90]     0.0    0.00    0.00   64917         u_is_cyrillic_letter(unsigned short) [90]
-----------------------------------------------
                0.00    0.00   64686/64686       u_is_letter_internal(unsigned short) [34]
[91]     0.0    0.00    0.00   64686         u_is_armenian_letter(unsigned short) [91]
-----------------------------------------------
                0.00    0.00   64609/64609       u_is_letter_internal(unsigned short) [34]
[92]     0.0    0.00    0.00   64609         u_is_hebrew_letter(unsigned short) [92]
-----------------------------------------------
                0.00    0.00   64236/64236       u_is_letter_internal(unsigned short) [34]
[93]     0.0    0.00    0.00   64236         u_is_gurmukhi_letter(unsigned short) [93]
-----------------------------------------------
                0.00    0.00   64173/64173       u_is_letter_internal(unsigned short) [34]
[94]     0.0    0.00    0.00   64173         u_is_gujarati_letter(unsigned short) [94]
-----------------------------------------------
                0.00    0.00   64111/64111       u_is_letter_internal(unsigned short) [34]
[95]     0.0    0.00    0.00   64111         u_is_oriya_letter(unsigned short) [95]
-----------------------------------------------
                0.00    0.00   64051/64051       u_is_letter_internal(unsigned short) [34]
[96]     0.0    0.00    0.00   64051         u_is_tamil_letter(unsigned short) [96]
-----------------------------------------------
                0.00    0.00   64006/64006       u_is_letter_internal(unsigned short) [34]
[97]     0.0    0.00    0.00   64006         u_is_telugu_letter(unsigned short) [97]
-----------------------------------------------
                0.00    0.00   63944/63944       u_is_letter_internal(unsigned short) [34]
[98]     0.0    0.00    0.00   63944         u_is_kannada_letter(unsigned short) [98]
-----------------------------------------------
                0.00    0.00   63879/63879       u_is_letter_internal(unsigned short) [34]
[99]     0.0    0.00    0.00   63879         u_is_malayalam_letter(unsigned short) [99]
-----------------------------------------------
                0.00    0.00   63815/63815       u_is_letter_internal(unsigned short) [34]
[100]    0.0    0.00    0.00   63815         u_is_sinhala_letter(unsigned short) [100]
-----------------------------------------------
                0.00    0.00   63739/63739       u_is_letter_internal(unsigned short) [34]
[101]    0.0    0.00    0.00   63739         u_is_thai_letter(unsigned short) [101]
-----------------------------------------------
                0.00    0.00   63453/63453       u_is_letter_internal(unsigned short) [34]
[102]    0.0    0.00    0.00   63453         u_is_korea_syllabe_letter(unsigned short) [102]
-----------------------------------------------
                0.00    0.00   53890/53890       ll_i_free(linked_list_i_comp**) [60]
[103]    0.0    0.00    0.00   53890         ll_i_pfree(void*) [103]
-----------------------------------------------
                0.00    0.00   11103/53890       ll_i_initialize() [110]
                0.00    0.00   42787/53890       ll_i_create_cell(unsigned int) [106]
[104]    0.0    0.00    0.00   53890         ll_i_malloc(int) [104]
-----------------------------------------------
                0.00    0.00   52269/52269       u_is_letter_internal(unsigned short) [34]
[105]    0.0    0.00    0.00   52269         u_is_CJK_Unified_Ideographs(unsigned short) [105]
-----------------------------------------------
                0.00    0.00   42787/42787       ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
[106]    0.0    0.00    0.00   42787         ll_i_create_cell(unsigned int) [106]
                0.00    0.00   42787/53890       ll_i_malloc(int) [104]
-----------------------------------------------
                0.00    0.00   31277/31277       u_is_letter_internal(unsigned short) [34]
[107]    0.0    0.00    0.00   31277         u_is_cjk_compatibility_ideographs(unsigned short) [107]
-----------------------------------------------
                0.00    0.00   18711/18711       ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
[108]    0.0    0.00    0.00   18711         ll_i_cell_i_equals(ll_i_cell_comp*, ll_i_cell_comp*) [108]
-----------------------------------------------
                0.00    0.00       1/12919       u_fopen(char*, char*) [76]
                0.00    0.00      74/12919       u_read_int(_IO_FILE*) [127]
                0.00    0.00     736/12919       lire_etats_fst2_avec_noms(_IO_FILE*) [142]
                0.00    0.00    2852/12919       lire_etiquettes_fst2(_IO_FILE*) [138]
                0.00    0.00    9256/12919       lire_entier_fst2(_IO_FILE*, int*) [112]
[109]    0.0    0.00    0.00   12919         u_fgetc(_IO_FILE*) [109]
-----------------------------------------------
                0.00    0.00   11103/11103       ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [58]
[110]    0.0    0.00    0.00   11103         ll_i_initialize() [110]
                0.00    0.00   11103/53890       ll_i_malloc(int) [104]
-----------------------------------------------
                0.00    0.00      19/3660        decomposer_angles_etiquette_fst2(etiq_*) [130]
                0.00    0.00    1214/3660        ajouter_etiquette_fst2(unsigned short*) [119]
                0.00    0.00    2427/3660        creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
[111]    0.0    0.00    0.00    3660         u_strcmp_char(unsigned short const*, char const*) [111]
-----------------------------------------------
                0.00    0.00    3240/3240        lire_etats_fst2_avec_noms(_IO_FILE*) [142]
[112]    0.0    0.00    0.00    3240         lire_entier_fst2(_IO_FILE*, int*) [112]
                0.00    0.00    9256/12919       u_fgetc(_IO_FILE*) [109]
-----------------------------------------------
                0.00    0.00    2428/2428        creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
[113]    0.0    0.00    0.00    2428         u_strlen(unsigned short const*) [113]
-----------------------------------------------
                0.00    0.00    1415/1415        lire_etats_fst2_avec_noms(_IO_FILE*) [142]
[114]    0.0    0.00    0.00    1415         ajouter_transition_mat(etat_fst*, int, int) [114]
                0.00    0.00    1415/1415        nouvelle_transition_mat() [115]
-----------------------------------------------
                0.00    0.00    1415/1415        ajouter_transition_mat(etat_fst*, int, int) [114]
[115]    0.0    0.00    0.00    1415         nouvelle_transition_mat() [115]
-----------------------------------------------
                0.00    0.00       1/1239        decomposer_angles_etiquette_fst2(etiq_*) [130]
                0.00    0.00      24/1239        lire_etats_fst2_avec_noms(_IO_FILE*) [142]
                0.00    0.00    1214/1239        creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
[116]    0.0    0.00    0.00    1239         u_strcpy(unsigned short*, unsigned short const*) [116]
-----------------------------------------------
                0.00    0.00     607/607         free_fst2(automate_fst2*) [146]
[117]    0.0    0.00    0.00     607         free_etiquette(etiq_*) [117]
-----------------------------------------------
                0.00    0.00     607/607         ajouter_etiquette_fst2(unsigned short*) [119]
[118]    0.0    0.00    0.00     607         creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
                0.00    0.00    2428/2428        u_strlen(unsigned short const*) [113]
                0.00    0.00    2427/3660        u_strcmp_char(unsigned short const*, char const*) [111]
                0.00    0.00    1214/1239        u_strcpy(unsigned short*, unsigned short const*) [116]
                0.00    0.00     607/607         nouvelle_etiquette_mat() [120]
                0.00    0.00       4/4           decomposer_angles_etiquette_fst2(etiq_*) [130]
-----------------------------------------------
                0.00    0.00     607/607         lire_etiquettes_fst2(_IO_FILE*) [138]
[119]    0.0    0.00    0.00     607         ajouter_etiquette_fst2(unsigned short*) [119]
                0.00    0.00    1214/3660        u_strcmp_char(unsigned short const*, char const*) [111]
                0.00    0.00     607/607         creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
-----------------------------------------------
                0.00    0.00     607/607         creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
[120]    0.0    0.00    0.00     607         nouvelle_etiquette_mat() [120]
-----------------------------------------------
                0.00    0.00     410/410         lire_etats_fst2_avec_noms(_IO_FILE*) [142]
[121]    0.0    0.00    0.00     410         nouvel_etat() [121]
-----------------------------------------------
                0.00    0.00     410/410         free_etat(etat_fst*) [123]
[122]    0.0    0.00    0.00     410         free_transition(transition_fst*) [122]
-----------------------------------------------
                0.00    0.00     410/410         free_fst2(automate_fst2*) [146]
[123]    0.0    0.00    0.00     410         free_etat(etat_fst*) [123]
                0.00    0.00     410/410         free_transition(transition_fst*) [122]
-----------------------------------------------
                0.00    0.00      74/74          u_read_int(_IO_FILE*) [127]
[124]    0.0    0.00    0.00      74         u_is_digit(unsigned short) [124]
-----------------------------------------------
                                  49             inserer_dans_liste_nombres(int, liste_nombres*) [125]
                0.00    0.00      55/55          compute_dependences_for_subgraph(automate_fst2*, int, liste_nombres**) [129]
[125]    0.0    0.00    0.00      55+49      inserer_dans_liste_nombres(int, liste_nombres*) [125]
                0.00    0.00      26/26          new_liste_nombres() [126]
                                  49             inserer_dans_liste_nombres(int, liste_nombres*) [125]
-----------------------------------------------
                0.00    0.00      26/26          inserer_dans_liste_nombres(int, liste_nombres*) [125]
[126]    0.0    0.00    0.00      26         new_liste_nombres() [126]
-----------------------------------------------
                0.00    0.00       1/25          load_fst2(char*, int) [39]
                0.00    0.00      24/25          lire_etats_fst2_avec_noms(_IO_FILE*) [142]
[127]    0.0    0.00    0.00      25         u_read_int(_IO_FILE*) [127]
                0.00    0.00      74/12919       u_fgetc(_IO_FILE*) [109]
                0.00    0.00      74/74          u_is_digit(unsigned short) [124]
-----------------------------------------------
                0.00    0.00      24/24          flatten_fst2(automate_fst2*, int, char*, int) [2]
[128]    0.0    0.00    0.00      24         free_liste_nombres(liste_nombres*) [128]
-----------------------------------------------
                0.00    0.00      24/24          compute_dependences(automate_fst2*) [135]
[129]    0.0    0.00    0.00      24         compute_dependences_for_subgraph(automate_fst2*, int, liste_nombres**) [129]
                0.00    0.00      55/55          inserer_dans_liste_nombres(int, liste_nombres*) [125]
-----------------------------------------------
                0.00    0.00       4/4           creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [118]
[130]    0.0    0.00    0.00       4         decomposer_angles_etiquette_fst2(etiq_*) [130]
                0.00    0.00      19/3660        u_strcmp_char(unsigned short const*, char const*) [111]
                0.00    0.00       1/1239        u_strcpy(unsigned short*, unsigned short const*) [116]
-----------------------------------------------
                0.00    0.00       1/2           load_fst2(char*, int) [39]
                0.00    0.00       1/2           flatten_fst2(automate_fst2*, int, char*, int) [2]
[131]    0.0    0.00    0.00       2         u_fclose(_IO_FILE*) [131]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[132]    0.0    0.00    0.00       1         setBufferMode() [132]
-----------------------------------------------
                0.00    0.00       1/1           determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[133]    0.0    0.00    0.00       1         init_stock_det(char_etats_det**) [133]
-----------------------------------------------
                0.00    0.00       1/1           load_fst2(char*, int) [39]
[134]    0.0    0.00    0.00       1         new_Automate_fst2() [134]
-----------------------------------------------
                0.00    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[135]    0.0    0.00    0.00       1         compute_dependences(automate_fst2*) [135]
                0.00    0.00      24/24          compute_dependences_for_subgraph(automate_fst2*, int, liste_nombres**) [129]
-----------------------------------------------
                0.00    0.00       1/1           determinisation_new_main_graph(_IO_FILE*, etat_comp**) [3]
[136]    0.0    0.00    0.00       1         init_graphe_mat_det(etat_fst_det**) [136]
-----------------------------------------------
                0.00    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[137]    0.0    0.00    0.00       1         save_graphs_to_keep(automate_fst2*, _IO_FILE*) [137]
-----------------------------------------------
                0.00    0.00       1/1           load_fst2(char*, int) [39]
[138]    0.0    0.00    0.00       1         lire_etiquettes_fst2(_IO_FILE*) [138]
                0.00    0.00    2852/12919       u_fgetc(_IO_FILE*) [109]
                0.00    0.00     607/607         ajouter_etiquette_fst2(unsigned short*) [119]
-----------------------------------------------
                0.00    0.00       1/1           free_fst2(automate_fst2*) [146]
[139]    0.0    0.00    0.00       1         liberer_liste_variables(variable_list*) [139]
-----------------------------------------------
                0.00    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[140]    0.0    0.00    0.00       1         renumber_graphs_to_keep(automate_fst2*) [140]
-----------------------------------------------
                0.00    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[141]    0.0    0.00    0.00       1         check_for_graphs_to_keep(automate_fst2*, int) [141]
                0.00    0.00       1/1           check_if_subgraphs_must_be_kept(int, int, int) [144]
-----------------------------------------------
                0.00    0.00       1/1           load_fst2(char*, int) [39]
[142]    0.0    0.00    0.00       1         lire_etats_fst2_avec_noms(_IO_FILE*) [142]
                0.00    0.00    3240/3240        lire_entier_fst2(_IO_FILE*, int*) [112]
                0.00    0.00    1415/1415        ajouter_transition_mat(etat_fst*, int, int) [114]
                0.00    0.00     736/12919       u_fgetc(_IO_FILE*) [109]
                0.00    0.00     410/410         nouvel_etat() [121]
                0.00    0.00      24/25          u_read_int(_IO_FILE*) [127]
                0.00    0.00      24/1239        u_strcpy(unsigned short*, unsigned short const*) [116]
-----------------------------------------------
                0.00    0.00       1/1           flatten_fst2(automate_fst2*, int, char*, int) [2]
[143]    0.0    0.00    0.00       1         new_flattened_main_graph_info() [143]
-----------------------------------------------
                                  32             check_if_subgraphs_must_be_kept(int, int, int) [144]
                0.00    0.00       1/1           check_for_graphs_to_keep(automate_fst2*, int) [141]
[144]    0.0    0.00    0.00       1+32      check_if_subgraphs_must_be_kept(int, int, int) [144]
                                  32             check_if_subgraphs_must_be_kept(int, int, int) [144]
-----------------------------------------------
                0.00    0.00       1/1           load_fst2(char*, int) [39]
[145]    0.0    0.00    0.00       1         resize(automate_fst2*) [145]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[146]    0.0    0.00    0.00       1         free_fst2(automate_fst2*) [146]
                0.00    0.00     607/607         free_etiquette(etiq_*) [117]
                0.00    0.00     410/410         free_etat(etat_fst*) [123]
                0.00    0.00       1/1           liberer_liste_variables(variable_list*) [139]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index nach Funktionsnamen

  [30] global constructors keyed to tab_is_letter (unicode.cpp) [84] ll_i_cell_i_compare(ll_i_cell_comp*, ll_i_cell_comp*) [72] nouveau_noeud_num_char_det()
 [103] ll_i_pfree(void*)      [65] nouvel_etat_mat_det()  [88] u_is_IPA_extensions_letter(unsigned short)
 [124] u_is_digit(unsigned short) [12] numero_ensemble_det(char_etats_det*, noeud_valeur_det*, int) [44] u_is_greek_extended_letter(unsigned short)
 [127] u_read_int(_IO_FILE*) [137] save_graphs_to_keep(automate_fst2*, _IO_FILE*) [14] get_sous_noeud_num_char_det(int, noeud_valeur_det*)
  [52] add_closure(linked_list_i_comp**, int, linked_list_i_comp*) [67] u_is_bengali_letter(unsigned short) [36] nouvelle_transition_mat_det()
 [104] ll_i_malloc(int)       [98] u_is_kannada_letter(unsigned short) [105] u_is_CJK_Unified_Ideographs(unsigned short)
  [18] malloc_comp(int)      [100] u_is_sinhala_letter(unsigned short) [86] u_is_latin_extendedA_letter(unsigned short)
 [121] nouvel_etat()         [118] creer_etiquette_fst2(int, unsigned short*, unsigned short*, unsigned short*, int) [87] u_is_latin_extendedB_letter(unsigned short)
   [2] flatten_fst2(automate_fst2*, int, char*, int) [45] get_epsilon_closures(etat_comp**, int) [24] supprimer_transitioninv_comp(etat_comp**, int, transition_comp*)
  [62] free_closures(linked_list_i_comp**, int) [138] lire_etiquettes_fst2(_IO_FILE*) [6] vider_trans_reciproques_comp(transition_comp*, etat_comp**)
 [132] setBufferMode()        [16] sauvegarder_etat_det(_IO_FILE*, etat_fst_det*) [26] flatten_sub_graph_recursively(automate_fst2*, int, int, int, flattened_main_graph_info*, int, int, int*, int*)
 [111] u_strcmp_char(unsigned short const*, char const*) [91] u_is_armenian_letter(unsigned short) [143] new_flattened_main_graph_info()
 [117] free_etiquette(etiq_*) [90] u_is_cyrillic_letter(unsigned short) [85] u_is_latin1_supplement_letter(unsigned short)
 [133] init_stock_det(char_etats_det**) [94] u_is_gujarati_letter(unsigned short) [4] ajouter_etat_dans_ensemble_det(int, char_etats_det**)
  [17] u_fprints_char(char*, _IO_FILE*) [93] u_is_gurmukhi_letter(unsigned short) [3] determinisation_new_main_graph(_IO_FILE*, etat_comp**)
  [64] u_fprints_html(unsigned short*, _IO_FILE*) [34] u_is_letter_internal(unsigned short) [10] free_flattened_main_graph_info(flattened_main_graph_info*)
 [122] free_transition(transition_fst*) [61] co_accessibilite_comp(etat_comp**, int) [55] remove_all_epsilon_transitions(etat_comp**, int)
 [110] ll_i_initialize()      [35] liberer_char_etat_det(char_etats_det*) [7] virer_epsilon_transitions_comp(etat_comp**, int)
  [59] est_a_virer_comp(etat_comp*) [99] u_is_malayalam_letter(unsigned short) [68] add_reverse_transition_to_state(int, int, etat_comp*)
  [23] init_hachage_det(int*) [119] ajouter_etiquette_fst2(unsigned short*) [144] check_if_subgraphs_must_be_kept(int, int, int)
  [37] liberer_etat_det(etat_fst_det*) [114] ajouter_transition_mat(etat_fst*, int, int) [129] compute_dependences_for_subgraph(automate_fst2*, int, liste_nombres**)
 [112] lire_entier_fst2(_IO_FILE*, int*) [49] initialiser_etiquettes() [130] decomposer_angles_etiquette_fst2(etiq_*)
 [106] ll_i_create_cell(unsigned int) [19] nouveau_char_etats_det() [107] u_is_cjk_compatibility_ideographs(unsigned short)
  [27] nouvel_etat_comp()    [120] nouvelle_etiquette_mat() [47] nouvelle_liste_branches_valeur_det()
 [101] u_is_thai_letter(unsigned short) [66] u_is_devanagari_letter(unsigned short) [73] nouvelle_liste_branches_num_char_det()
  [75] init_resultat_det(etat_fst_det**, noeud_valeur_det*, int) [54] vider_noeud_valeur_det(noeud_valeur_det*) [32] __static_initialization_and_destruction_0(int, int) (unicode.cpp)
  [41] liberer_arbre_det(noeud_valeur_det*) [11] vider_transitions_comp(transition_comp*) [53] compute_reverse_transitions_of_main_graph(flattened_main_graph_info*)
 [134] new_Automate_fst2()    [13] ajouter_transition_comp(etat_comp**, int, int, int) [8] add_transitions_according_to_epsilon_closure(linked_list_i_comp**, etat_comp**, int)
 [126] new_liste_nombres()    [43] get_epsilon_closure_rec(linked_list_i_comp**, etat_comp**, int, unsigned char*) [145] resize(automate_fst2*)
  [89] u_is_greek_letter(unsigned short) [50] initialiser_graphe_fst2() [29] toupper(unsigned char)
  [95] u_is_oriya_letter(unsigned short) [139] liberer_liste_variables(variable_list*) [109] u_fgetc(_IO_FILE*)
  [96] u_is_tamil_letter(unsigned short) [115] nouvelle_transition_mat() [76] u_fopen(char*, char*)
  [63] accessibilite_comp(etat_comp**, int) [140] renumber_graphs_to_keep(automate_fst2*) [77] u_fputc(int, _IO_FILE*)
  [25] flatten_main_graph(automate_fst2*, int, flattened_main_graph_info*, int) [56] u_is_basic_latin_letter(unsigned short) [21] u_fputc(unsigned short, _IO_FILE*)
 [128] free_liste_nombres(liste_nombres*) [141] check_for_graphs_to_keep(automate_fst2*, int) [131] u_fclose(_IO_FILE*)
  [31] init_unicode_table()    [9] liberer_etat_graphe_comp(etat_comp*) [51] u_fwrite(unsigned short*, int, _IO_FILE*)
 [108] ll_i_cell_i_equals(ll_i_cell_comp*, ll_i_cell_comp*) [71] nouveau_noeud_valeur_det() [116] u_strcpy(unsigned short*, unsigned short const*)
  [58] ll_i_insert_sorted(linked_list_i_comp**, unsigned int) [15] nouvelle_transition_comp() [113] u_strlen(unsigned short const*)
  [48] u_is_arabic_letter(unsigned short) [46] vider_noeud_num_char_det(noeud_num_char_det*) [69] copie_det(char_etats_det*)
  [92] u_is_hebrew_letter(unsigned short) [20] get_sous_noeud_valeur_det(int, noeud_num_char_det*) [22] free_comp(void*)
  [97] u_is_telugu_letter(unsigned short) [142] lire_etats_fst2_avec_noms(_IO_FILE*) [123] free_etat(etat_fst*)
  [57] u_is_thaana_letter(unsigned short) [102] u_is_korea_syllabe_letter(unsigned short) [146] free_fst2(automate_fst2*)
 [135] compute_dependences(automate_fst2*) [28] ajouter_transition_mat_det(etat_fst_det*, int, int) [60] ll_i_free(linked_list_i_comp**)
  [70] copy_tags_into_file(automate_fst2*, _IO_FILE*) [40] initialiser_variables_fst2() [39] load_fst2(char*, int)
   [5] eliminer_etats_comp(etat_comp**, int*) [125] inserer_dans_liste_nombres(int, liste_nombres*) [74] u_fprints(unsigned short*, _IO_FILE*)
 [136] init_graphe_mat_det(etat_fst_det**) [38] liberer_transition_mat_det(transition_fst_det*) [42] <Zyklus 1>
